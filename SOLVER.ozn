output ["\"output\": {","\"default\": ",showJSON(concat(["full rows = ",show(full_rows),"\n","pos_x = ",show(pos_x),"\n","widths = ",show(actual_widths),"\n","heights = ",show(actual_heights),"\n","rotations = ",show(rotations),"\n","field = ","\n",show(slice_1d(field,[20..20,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[19..19,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[18..18,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[17..17,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[16..16,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[15..15,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[14..14,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[13..13,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[12..12,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[11..11,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[10..10,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[9..9,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[8..8,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[7..7,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[6..6,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[5..5,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[4..4,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[3..3,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[2..2,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[1..1,-infinity..infinity],index_set_2of2(field))),"\n","count 1 = ",show('_26@count'(slice_1d(field,[1..1,-infinity..infinity],index_set_2of2(field)),1) div 10==1)])),", \"raw\": ",showJSON(concat(["full rows = ",show(full_rows),"\n","pos_x = ",show(pos_x),"\n","widths = ",show(actual_widths),"\n","heights = ",show(actual_heights),"\n","rotations = ",show(rotations),"\n","field = ","\n",show(slice_1d(field,[20..20,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[19..19,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[18..18,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[17..17,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[16..16,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[15..15,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[14..14,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[13..13,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[12..12,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[11..11,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[10..10,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[9..9,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[8..8,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[7..7,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[6..6,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[5..5,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[4..4,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[3..3,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[2..2,-infinity..infinity],index_set_2of2(field))),"\n",show(slice_1d(field,[1..1,-infinity..infinity],index_set_2of2(field))),"\n","count 1 = ",show('_26@count'(slice_1d(field,[1..1,-infinity..infinity],index_set_2of2(field)),1) div 10==1)])),"}, \"sections\": [\"default\", \"raw\"]"];
function int : '_26@count'(array [int] of int: x,int: y) = count([i==y | i in array1d(x)]);
int: field_w = 10;
int: field_h = 20;
array [1..field_h,1..field_w] of int: field;
array [1..2] of bool: rotations;
array [1..2] of int: actual_heights;
array [1..2] of int: actual_widths;
array [1..2] of int: pos_x;
int: full_rows;
